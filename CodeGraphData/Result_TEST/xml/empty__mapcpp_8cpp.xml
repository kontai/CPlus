<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="empty__mapcpp_8cpp" kind="file">
    <compoundname>empty_mapcpp.cpp</compoundname>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="18">
        <label>D:/workspace/CPlus/TEST/empty_mapcpp.cpp</label>
        <link refid="empty_mapcpp.cpp"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_simple__1" prot="public">Simple_1</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="empty__mapcpp_8cpp_1a80f84d8d644463a761f6d3c2d9fb4071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add_2</definition>
        <argsstring>(Simple_1 &amp;sp)</argsstring>
        <name>add_2</name>
        <param>
          <type><ref refid="class_simple__1" kindref="compound">Simple_1</ref> &amp;</type>
          <declname>sp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/workspace/CPlus/TEST/empty_mapcpp.cpp" line="25" column="1" bodyfile="D:/workspace/CPlus/TEST/empty_mapcpp.cpp" bodystart="25" bodyend="27"/>
        <references refid="class_simple__1_1a84dd8437bc2adee1928e070ab7db6e45" compoundref="empty__mapcpp_8cpp" startline="21">Simple_1::va1</references>
        <references refid="class_simple__1_1a8213f169d3c801293707f835d510c613" compoundref="empty__mapcpp_8cpp" startline="21">Simple_1::va2</references>
        <referencedby refid="empty__mapcpp_8cpp_1a5f634295f33442799e8c035afeb7ee94" compoundref="empty__mapcpp_8cpp" startline="40" endline="51">maini2</referencedby>
      </memberdef>
      <memberdef kind="function" id="empty__mapcpp_8cpp_1a95b896a8ce51020d46434afb73f2eda4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_simple__1" kindref="compound">Simple_1</ref> &amp;</type>
        <definition>const Simple_1&amp; add_2c</definition>
        <argsstring>(const Simple_1 &amp;r1, const Simple_1 &amp;r2)</argsstring>
        <name>add_2c</name>
        <param>
          <type>const <ref refid="class_simple__1" kindref="compound">Simple_1</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="class_simple__1" kindref="compound">Simple_1</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/workspace/CPlus/TEST/empty_mapcpp.cpp" line="31" column="1" bodyfile="D:/workspace/CPlus/TEST/empty_mapcpp.cpp" bodystart="31" bodyend="38"/>
        <references refid="class_simple__1_1a2f592b7fca0170cbf74f45a97993eedd" compoundref="empty__mapcpp_8cpp" startline="22">Simple_1::str</references>
        <references refid="class_simple__1_1a84dd8437bc2adee1928e070ab7db6e45" compoundref="empty__mapcpp_8cpp" startline="21">Simple_1::va1</references>
        <references refid="class_simple__1_1a8213f169d3c801293707f835d510c613" compoundref="empty__mapcpp_8cpp" startline="21">Simple_1::va2</references>
        <referencedby refid="empty__mapcpp_8cpp_1a5f634295f33442799e8c035afeb7ee94" compoundref="empty__mapcpp_8cpp" startline="40" endline="51">maini2</referencedby>
      </memberdef>
      <memberdef kind="function" id="empty__mapcpp_8cpp_1a5f634295f33442799e8c035afeb7ee94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int maini2</definition>
        <argsstring>()</argsstring>
        <name>maini2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/workspace/CPlus/TEST/empty_mapcpp.cpp" line="40" column="1" bodyfile="D:/workspace/CPlus/TEST/empty_mapcpp.cpp" bodystart="40" bodyend="51"/>
        <references refid="empty__mapcpp_8cpp_1a80f84d8d644463a761f6d3c2d9fb4071" compoundref="empty__mapcpp_8cpp" startline="25" endline="27">add_2</references>
        <references refid="empty__mapcpp_8cpp_1a95b896a8ce51020d46434afb73f2eda4" compoundref="empty__mapcpp_8cpp" startline="31" endline="38">add_2c</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">[3/6/2018<sp/>7:44</highlight></codeline>
<codeline lineno="3"><highlight class="comment">empty_mapcpp.cpp</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="class_simple__1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_simple__1" kindref="compound">Simple_1</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12" refid="class_simple__1_1a23a12592ea86d2c405fbb3049d0e33c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simple__1_1a23a12592ea86d2c405fbb3049d0e33c8" kindref="member">Simple_1</ref>()<sp/>:va1(0),<sp/>va2(0),<sp/>str(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="13" refid="class_simple__1_1a268fd5af277ccb0397b468abfcc17581" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simple__1_1a268fd5af277ccb0397b468abfcc17581" kindref="member">Simple_1</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>:va1(a),<sp/>va2(b)<sp/>{}</highlight></codeline>
<codeline lineno="14" refid="class_simple__1_1a65a208621edc3ddb56b7180a61f8f36c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simple__1_1a65a208621edc3ddb56b7180a61f8f36c" kindref="member">Simple_1</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>b)<sp/>:va1(a),<sp/>str(b)<sp/>{}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_simple__1" kindref="compound">Simple_1</ref>&amp;<sp/><ref refid="empty__mapcpp_8cpp_1a95b896a8ce51020d46434afb73f2eda4" kindref="member">add_2c</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/><ref refid="class_simple__1" kindref="compound">Simple_1</ref>&amp;<sp/>r1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/><ref refid="class_simple__1" kindref="compound">Simple_1</ref>&amp;<sp/>r2);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="empty__mapcpp_8cpp_1a80f84d8d644463a761f6d3c2d9fb4071" kindref="member">add_2</ref>(<ref refid="class_simple__1" kindref="compound">Simple_1</ref>&amp;);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//~Simple_1();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21" refid="class_simple__1_1a8213f169d3c801293707f835d510c613" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>va1,<sp/><ref refid="class_simple__1_1a8213f169d3c801293707f835d510c613" kindref="member">va2</ref>;</highlight></codeline>
<codeline lineno="22" refid="class_simple__1_1a2f592b7fca0170cbf74f45a97993eedd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_simple__1_1a2f592b7fca0170cbf74f45a97993eedd" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="empty__mapcpp_8cpp_1a80f84d8d644463a761f6d3c2d9fb4071" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="empty__mapcpp_8cpp_1a80f84d8d644463a761f6d3c2d9fb4071" kindref="member">add_2</ref>(<ref refid="class_simple__1" kindref="compound">Simple_1</ref>&amp;<sp/>sp)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>sp.<ref refid="class_simple__1_1a84dd8437bc2adee1928e070ab7db6e45" kindref="member">va1</ref><sp/>+<sp/>sp.<ref refid="class_simple__1_1a8213f169d3c801293707f835d510c613" kindref="member">va2</ref><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="empty__mapcpp_8cpp_1a95b896a8ce51020d46434afb73f2eda4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/><ref refid="class_simple__1" kindref="compound">Simple_1</ref>&amp;<sp/><ref refid="empty__mapcpp_8cpp_1a95b896a8ce51020d46434afb73f2eda4" kindref="member">add_2c</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="class_simple__1" kindref="compound">Simple_1</ref>&amp;<sp/>r1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/><ref refid="class_simple__1" kindref="compound">Simple_1</ref>&amp;<sp/>r2)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simple__1" kindref="compound">Simple_1</ref><sp/>temp;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>temp.<ref refid="class_simple__1_1a84dd8437bc2adee1928e070ab7db6e45" kindref="member">va1</ref><sp/>+=<sp/>r1.<ref refid="class_simple__1_1a84dd8437bc2adee1928e070ab7db6e45" kindref="member">va1</ref><sp/>+<sp/>r2.<ref refid="class_simple__1_1a84dd8437bc2adee1928e070ab7db6e45" kindref="member">va1</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>temp.<ref refid="class_simple__1_1a8213f169d3c801293707f835d510c613" kindref="member">va2</ref><sp/>+=<sp/>r1.<ref refid="class_simple__1_1a8213f169d3c801293707f835d510c613" kindref="member">va2</ref><sp/>+<sp/>r2.<ref refid="class_simple__1_1a8213f169d3c801293707f835d510c613" kindref="member">va2</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>temp.<ref refid="class_simple__1_1a2f592b7fca0170cbf74f45a97993eedd" kindref="member">str</ref><sp/>=<sp/>r1.<ref refid="class_simple__1_1a2f592b7fca0170cbf74f45a97993eedd" kindref="member">str</ref><sp/>+<sp/>r2.<ref refid="class_simple__1_1a2f592b7fca0170cbf74f45a97993eedd" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;temp.va1&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>temp.<ref refid="class_simple__1_1a84dd8437bc2adee1928e070ab7db6e45" kindref="member">va1</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\ttemp.va2&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>temp.<ref refid="class_simple__1_1a8213f169d3c801293707f835d510c613" kindref="member">va2</ref><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="empty__mapcpp_8cpp_1a5f634295f33442799e8c035afeb7ee94" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="empty__mapcpp_8cpp_1a5f634295f33442799e8c035afeb7ee94" kindref="member">maini2</ref>()<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simple__1" kindref="compound">Simple_1</ref><sp/>a(2,<sp/>333);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simple__1" kindref="compound">Simple_1</ref><sp/>b(3,<sp/>555);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="empty__mapcpp_8cpp_1a80f84d8d644463a761f6d3c2d9fb4071" kindref="member">add_2</ref>(a);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="empty__mapcpp_8cpp_1a95b896a8ce51020d46434afb73f2eda4" kindref="member">add_2c</ref>(a,<sp/>b);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;pause&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/workspace/CPlus/TEST/empty_mapcpp.cpp"/>
  </compounddef>
</doxygen>
